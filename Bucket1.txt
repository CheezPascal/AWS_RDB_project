# Goog
# Configure the AWS Provider
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
}

provider "aws" {
  region = "us-west-2" # Replace with your desired region
}

# Create a VPC
resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"

  tags = {
    Name = "main"
  }
}

# Create a subnet group
resource "aws_db_subnet_group" "default" {
  name       = "main"
  subnet_ids = [aws_subnet.private.*.id]

  tags = {
    Name = "main"
  }
}

# Create two private subnets
resource "aws_subnet" "private" {
  count = 2
  vpc_id     = aws_vpc.main.id
  cidr_block = cidrsubnet(aws_vpc.main.cidr_block, 8, count.index)

  availability_zone = data.aws_availability_zones.available.names[count.index]

  tags = {
    Name = "private-${count.index + 1}"
  }
}

# Retrieve available availability zones
data "aws_availability_zones" "available" {}

# Create a security group for the database
resource "aws_security_group" "default" {
  name = "rds_security_group"
  vpc_id = aws_vpc.main.id

 ingress {
    from_port   = 3306 # Replace with your desired port
    to_port     = 3306 # Replace with your desired port
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] # Replace with your desired CIDR block
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "rds_security_group"
  }
}

# Create an RDS instance
resource "aws_db_instance" "default" {
  allocated_storage    = 20
  storage_type        = "gp2"
  engine              = "mysql" # Replace with your desired engine
  engine_version      = "8.0" # Replace with your desired engine version
  instance_class      = "db.t3.micro"
  identifier           = "aws-rds-instance"
  username            = "admin" # Replace with your desired username
  password            = "password" # Replace with your desired password
  db_subnet_group_name = aws_db_subnet_group.default.name
  vpc_security_group_ids = [aws_security_group.default.id]
  skip_final_snapshot  = true

  tags = {
    Name = "aws-rds-instance"
  }
}